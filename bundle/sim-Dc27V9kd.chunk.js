import{m as e,l as t,n as a,o as l,q as s,s as n,t as o,u as r,v as i,w as p,x as c,T as d,H as u,y as h,z as S,A as g,D as m,F as I,G as f,J as v,K as y}from"./preset_utils-BOrpehHr.chunk.js";import{R as O}from"./suggest_reforges_action-C8jDlFca.chunk.js";import{_ as R,T as b,$ as T,a0 as A,a1 as C,a2 as P,a3 as w,a4 as H,a5 as B,a6 as k,G as E,a7 as D,a8 as G,a9 as M,aa as F,ab as L,ac as x,ad as q,ae as U,af as V,b as W,a as N,ag as j,ah as z,ai as _,aj as K,ak as J,al as $,S as Q,F as X,R as Y}from"./detailed_results-BnSf1ELV.chunk.js";t({fieldName:"defensiveDelay",label:"Defensives Delay",labelTooltip:"Minimum delay between using more defensive cooldowns."});const Z={inputs:[a({fieldName:"presence",label:"Presence",labelTooltip:"Presence to be in during the encounter.",values:[{name:"Blood",value:R.Blood},{name:"Frost",value:R.Frost},{name:"Unholy",value:R.Unholy}],changeEmitter:e=>b.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),a({fieldName:"opener",label:"Opener",labelTooltip:"Chose what opener to perform:<br>\t\t\t\t<b>Regular</b>: Regular opener.<br>\t\t\t\t<b>Threat</b>: Full IT spam for max threat.",values:[{name:"Regular",value:T.Regular},{name:"Threat",value:T.Threat}],changeEmitter:e=>b.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),a({fieldName:"optimizationSetting",label:"Optimization Setting",labelTooltip:"Chose what metric to optimize:<br>\t\t\t\t<b>Hps</b>: Prioritizes holding runes for healing after damage taken.<br>\t\t\t\t<b>Tps</b>: Prioritizes spending runes for icy touch spam.",values:[{name:"Hps",value:A.Hps},{name:"Tps",value:A.Tps}],changeEmitter:e=>b.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),a({fieldName:"bloodSpell",label:"Blood Spell",labelTooltip:"Chose what blood rune spender to use.",values:[{name:"Blood Strike",value:C.BloodStrike},{name:"Blood Boil",value:C.BloodBoil},{name:"Heart Strike",value:C.HeartStrike}],changeEmitter:e=>b.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),a({fieldName:"bloodTapPrio",label:"Blood Tap",labelTooltip:"Chose how to use Blood Tap:<br>\t\t\t\t<b>Use as Defensive Cooldown</b>: Use as defined in Cooldowns (Requires T10 4pc).<br>\t\t\t\t<b>Offensive</b>: Use Blood Tap for extra Icy Touches.",values:[{name:"Use as Defensive Cooldown",value:P.Defensive},{name:"Offensive",value:P.Offensive}],changeEmitter:e=>b.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])})]},ee={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:48263}}},doAtValue:{const:{val:"-60s"}}},{action:{castSpell:{spellId:{spellId:49222}}},doAtValue:{const:{val:"-50s"}}},{action:{castSpell:{spellId:{spellId:42650}}},doAtValue:{const:{val:"-10s"}}},{action:{castSpell:{spellId:{spellId:46584}}},doAtValue:{const:{val:"-3s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-1s"}}},{action:{castSpell:{spellId:{otherId:"OtherActionPotion"}}},doAtValue:{const:{val:"-1s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentTime:{}},rhs:{const:{val:"89s"}}}},castSpell:{spellId:{spellId:48792}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpLe",lhs:{auraRemainingTime:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:81130}}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpLe",lhs:{auraRemainingTime:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:55095}}},rhs:{const:{val:"1"}}}}]}},castSpell:{spellId:{spellId:77575}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:49222}}}}},strictSequence:{actions:[{castSpell:{spellId:{spellId:45529}}},{castSpell:{spellId:{spellId:49222}}}]}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"60%"}}}},castSpell:{spellId:{spellId:55233}}}},{action:{condition:{auraIsActive:{auraId:{spellId:55233}}},castSpell:{spellId:{spellId:82176}}}},{action:{condition:{auraIsActive:{auraId:{spellId:96171}}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},{not:{val:{spellCanCast:{spellId:{spellId:49998,tag:1}}}}}]}},castSpell:{spellId:{spellId:47568}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"2"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"2"}}}},{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},{not:{val:{auraIsActive:{auraId:{spellId:77535}}}}}]}},castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"120"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{condition:{and:{vals:[{or:{vals:[{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneDeath"}},rhs:{const:{val:"1"}}}}]}},{not:{val:{spellCanCast:{spellId:{spellId:49998,tag:1}}}}}]}},strictSequence:{actions:[{castSpell:{spellId:{spellId:45529}}},{castSpell:{spellId:{spellId:49998,tag:1}}}]}}},{action:{castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"80%"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"2"}}}}]}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{auraIsActive:{auraId:{spellId:81141}}},castSpell:{spellId:{spellId:48721}}}},{action:{condition:{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"2"}}}},castSpell:{spellId:{spellId:55050}}}},{hide:!0,action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"0"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"0"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneDeath"}},rhs:{const:{val:"0"}}}}]}},castSpell:{spellId:{spellId:56815,tag:1}}}},{hide:!0,action:{condition:{cmp:{op:"OpLt",lhs:{auraRemainingTime:{auraId:{spellId:46584}}},rhs:{const:{val:"2s"}}}},castSpell:{spellId:{spellId:48743}}}},{action:{castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{castSpell:{spellId:{spellId:57330}}}},{action:{castSpell:{spellId:{spellId:46584}}}}]},te={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:48263}}},doAtValue:{const:{val:"-60s"}}},{action:{castSpell:{spellId:{spellId:49222}}},doAtValue:{const:{val:"-60s"}}},{action:{castSpell:{spellId:{spellId:42650}}},doAtValue:{const:{val:"-10s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"20%"}}}},castSpell:{spellId:{spellId:48792}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"40%"}}}},castSpell:{spellId:{spellId:55233}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"60%"}}}},{not:{val:{auraIsActive:{auraId:{spellId:49222}}}}}]}},castSpell:{spellId:{spellId:49222}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"80%"}}}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{const:{val:"false"}},castSpell:{spellId:{spellId:48743}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},castSpell:{spellId:{itemId:65109}}}},{action:{condition:{or:{vals:[{not:{val:{dotIsActive:{spellId:{spellId:55095}}}}},{not:{val:{dotIsActive:{spellId:{spellId:55078}}}}}]}},castSpell:{spellId:{spellId:77575}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"120"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{nextRuneCooldown:{runeType:"RuneBlood"}},rhs:{const:{val:"2s"}}}},castSpell:{spellId:{spellId:55050}}}},{action:{castSpell:{spellId:{spellId:46584}}}},{action:{condition:{auraIsActive:{auraId:{spellId:81141}}},castSpell:{spellId:{spellId:48721}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"80"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{runeCooldown:{runeType:"RuneBlood"}},rhs:{const:{val:"1s"}}}},castSpell:{spellId:{spellId:45529}}}}]},ae={items:[{id:65186,enchant:4206,gems:[52294,52231],reforging:126},{id:60227,gems:[52231],reforging:122},{id:65188,enchant:4198,gems:[52221],reforging:126},{id:69878,randomSuffix:-128,enchant:1354,reforging:122},{id:65184,enchant:4103,gems:[52221,52242],reforging:129},{id:60228,enchant:3850,gems:[52242,0],reforging:147},{id:65185,enchant:4121,gems:[52242,0],reforging:132},{id:65370,randomSuffix:-226,gems:[52221,52242],reforging:125},{id:65182,enchant:4270,gems:[52242,52242]},{id:60229,enchant:4062,gems:[52221,52242],reforging:126},{id:65372,randomSuffix:-128,reforging:125},{id:60226,gems:[52242],reforging:146},{id:65048},{id:62471},{id:65003,enchant:3847,reforging:147},{},{id:64676,gems:[52242],reforging:122}]},le=l("Pre-Raid",{items:[{id:59359,enchant:4206,gems:[52294,59480,59493]},{id:56319,reforging:129},{id:56318,enchant:4198,gems:[52221]},{id:62383,enchant:4100,reforging:122},{id:55058,enchant:4103,gems:[52242],reforging:133},{id:57870,enchant:3850,gems:[52231,0]},{id:56428,enchant:4121,gems:[52221,0],reforging:129},{id:55059,gems:[52242,52242],reforging:122},{id:58102,enchant:4270,gems:[52231,52242],reforging:126},{id:62418,enchant:4062,gems:[52242],reforging:132},{id:56444},{id:62440},{id:58483,gems:[52242]},{id:56347},{id:56342,enchant:3847,reforging:151},{},{id:62243,gems:[52242],reforging:139}]}),se=l("P1",ae),ne=s("Simple",te),oe=s("Defensive",ee),re=n("P1",w.fromMap({[H.StatStrength]:2.45,[H.StatAgility]:1.2,[H.StatStamina]:3,[H.StatAttackPower]:1,[H.StatMeleeHit]:6,[H.StatMeleeCrit]:1.65,[H.StatMeleeHaste]:1.58,[H.StatExpertise]:5,[H.StatArmor]:1,[H.StatDodge]:2.5,[H.StatParry]:2.44,[H.StatBonusArmor]:1,[H.StatMastery]:7},{[B.PseudoStatMainHandDps]:12.29,[B.PseudoStatOffHandDps]:0})),ie={name:"Blood",data:k.create({talentsString:"03323200132222311321-2-003",glyphs:E.create({prime1:D.GlyphOfDeathStrike,prime2:D.GlyphOfHeartStrike,prime3:D.GlyphOfRuneStrike,major1:G.GlyphOfAntiMagicShell,major2:G.GlyphOfDancingRuneWeapon,major3:G.GlyphOfBoneShield,minor1:M.GlyphOfDeathGate,minor2:M.GlyphOfPathOfFrost,minor3:M.GlyphOfHornOfWinter})})},pe=F.create({classOptions:{startingRunicPower:0}}),ce=L.create({flask:x.FlaskOfSteelskin,food:q.FoodBeerBasedCrocolisk,defaultPotion:U.GolembloodPotion,prepopPotion:U.GolembloodPotion,tinkerHands:V.TinkerHandsSynapseSprings}),de={profession1:W.Engineering,profession2:W.Leatherworking,distanceFromTarget:5},ue=o(Q.SpecBloodDeathKnight,{cssClass:"blood-death-knight-sim-ui",cssScheme:N.getCssClass(N.DeathKnight),knownIssues:[],epStats:[H.StatStamina,H.StatStrength,H.StatAgility,H.StatAttackPower,H.StatExpertise,H.StatMeleeHit,H.StatMeleeCrit,H.StatMeleeHaste,H.StatSpellHit,H.StatSpellCrit,H.StatSpellHaste,H.StatHealth,H.StatArmor,H.StatBonusArmor,H.StatDodge,H.StatParry,H.StatSpellHit,H.StatNatureResistance,H.StatShadowResistance,H.StatFrostResistance,H.StatMastery],epPseudoStats:[B.PseudoStatMainHandDps,B.PseudoStatOffHandDps],epReferenceStat:H.StatAttackPower,displayStats:[H.StatHealth,H.StatArmor,H.StatStamina,H.StatStrength,H.StatAgility,H.StatAttackPower,H.StatExpertise,H.StatSpellHit,H.StatSpellCrit,H.StatMeleeHit,H.StatMeleeCrit,H.StatMeleeHaste,H.StatDodge,H.StatParry,H.StatMastery],defaults:{gear:se.gear,epWeights:re.epWeights,statCaps:(()=>{const e=(new w).withStat(H.StatMeleeHit,8*j),t=(new w).withStat(H.StatExpertise,26*z);return e.add(t)})(),other:de,consumes:ce,talents:ie.data,specOptions:pe,raidBuffs:_.create({retributionAura:!0,powerWordFortitude:!0,markOfTheWild:!0,icyTalons:!0,hornOfWinter:!0,abominationsMight:!0,leaderOfThePack:!0,bloodlust:!0,arcaneTactics:!0,devotionAura:!0,resistanceAura:!0}),partyBuffs:K.create({}),individualBuffs:J.create({}),debuffs:$.create({bloodFrenzy:!0,sunderArmor:!0,ebonPlaguebringer:!0,criticalMass:!0,vindication:!0,frostFever:!0})},modifyDisplayStats:e=>{const t=e.getCurrentStats();if(t.finalStats){const e=.08*t.finalStats.stats[H.StatStamina],a=14*e;return{buffs:(new w).addStat(H.StatHealth,a).addStat(H.StatStamina,e)}}return{}},playerIconInputs:[],rotationInputs:Z,includeBuffDebuffInputs:[r],excludeBuffDebuffInputs:[i,p],otherInputs:{inputs:[c,d,u,h,S,g,m,I,f,e({fieldName:"startingRunicPower",label:"Starting Runic Power",labelTooltip:"Initial RP at the start of each iteration."}),v]},encounterPicker:{showExecuteProportion:!1},presets:{epWeights:[re],rotations:[ne,oe],talents:[ie],gear:[le,se]},autoRotation:e=>ne.rotation.rotation,raidSimPresets:[{spec:Q.SpecBloodDeathKnight,talents:ie.data,specOptions:pe,consumes:ce,defaultFactionRaces:{[X.Unknown]:Y.RaceUnknown,[X.Alliance]:Y.RaceWorgen,[X.Horde]:Y.RaceTroll},defaultGear:{[X.Unknown]:{},[X.Alliance]:{1:se.gear,2:se.gear,3:se.gear,4:se.gear},[X.Horde]:{1:se.gear,2:se.gear,3:se.gear,4:se.gear}},otherDefaults:de}]});class he extends y{constructor(e,t){super(e,t,ue),t.sim.waitForInit().then((()=>{new O(this)}))}}export{he as B};
